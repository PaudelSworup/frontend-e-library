// useEffect(() => {
//   getUserRecommendation(userid).then((res) => {
//     setRecommendations(res?.data?.recommendedBooks);
//   });
// }, [userid]);

// useEffect(() => {
//   listBooks(id).then((res) => {
//     setSimilar(res?.data?.book);
//   });
// }, [id]);

// useEffect(() => {
//   getRating(id).then((res) => {
//     const ratingData = res?.data?.books.find((data) => {
//       return data?.user === userid && data?.book?._id === id;
//     });
//     setRating(ratingData?.rating);
//   });

// }, [userid, id]);
// // console.log(rating)

// useEffect(()=>{
//     getKnn(userid , id).then((res)=>{
//       setKnn(res?.data.recommendations)
//     })

// },[])



// useEffect(() => {
  //   let status = JSON.parse(localStorage.getItem(userid));
  //   if (status) {
  //     setKnn(status);
  //   }
  // }, [userid]);


  saved
  <div className="lg:mx-40 flex gap-9 main_container ">
        <div className="p-2 user_detail_container">
          <div className="user_detail ">
            <div className="text-white border w-20 h-20 flex justify-center items-center rounded-full transition-all duration-150 cursor-pointer hover:opacity-100 lg:w-44 lg:h-44 ">
              <span className="text-center" onClick={uploadProfile}>
                {profileData.length > 0 ? (
                  profileData?.map((data) => {
                    return (
                      <img
                        key={data?._id}
                        src={`http://localhost:8000/${data?.profileImage}`}
                        alt=""
                        className="rounded-full object-cover lg:w-[165px] lg:h-[165px]"
                      />
                    );
                  })
                ) : (
                  <span>
                    <FaUser className="text-white text-[35px] lg:text-[80px] " />
                  </span>
                )}
              </span>
            </div>

            <div className="text-white flex flex-col ">
              <span>{fullname}</span>
              <span>{email}</span>
            </div>
          </div>

          <div className="flex gap-2 lg:flex-col mt-2 items_data  ">
            {drop?.map((data) => (
              <span
                key={data.id}
                className={`text-white cursor-pointer rounded-md  p-2 hover:bg-[#222] transition-all duration-100  ${
                  bg === data.id ? "bg-[#222]" : ""
                }`}
                onClick={() => setBg(data.id)}
              >
                {data.span}
              </span>
            ))}
          </div>
        </div>
        <div className="flex flex-col  ">
          <div className="p-2 saved_items">
            <h2 className="text-white">Saved Items</h2>
            <p className="text-[#9E9E9E]">
              Saved Books. Save books to keep track of the books you want to
              Request later. To unsave, just click on the bookmark icon again.
            </p>
          </div>

          <div className="px-5  sm:grid md:grid-cols-2 xl:grid-cols-4 3xl:flex flex-wrap justify-center bg-[#131313]">
            {Isbn?.map((data) => (
              <ThumbNail key={data._id} result={data} />
            ))}
          </div>
        </div>
      </div>


      //profile DetailSection


      <div className="p-2 user_detail_container">
          <div className="user_detail ">
            <div className="text-white border w-20 h-20 flex justify-center items-center rounded-full transition-all duration-150 cursor-pointer hover:opacity-100 lg:w-44 lg:h-44 ">
              <span className="text-center" onClick={uploadProfile}>
                {profileData.length > 0 ? (
                  profileData?.map((data) => {
                    return (
                      <img
                        key={data?._id}
                        src={`http://localhost:8000/${data?.profileImage}`}
                        alt=""
                        className="rounded-full object-cover lg:w-[165px] lg:h-[165px]"
                      />
                    );
                  })
                ) : (
                  <span>
                    <FaUser className="text-white text-[35px] lg:text-[80px] " />
                  </span>
                )}
              </span>
            </div>

            <div className="text-white flex flex-col ">
              <span>{fullname}</span>
              <span>{email}</span>
            </div>
          </div>

          <div className="flex gap-2 lg:flex-col mt-2 items_data  ">
            {drop?.map((data) => (
              <span
                key={data.id}
                className={`text-white cursor-pointer rounded-md  p-2 hover:bg-[#222] transition-all duration-100  ${
                  bg === data.id ? "bg-[#222]" : ""
                }`}
                onClick={() => setBg(data.id)}
              >
                {data.span}
              </span>
            ))}
          </div>
        </div>
        
